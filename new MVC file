//CATEGORY CLASS

public class Category 
{
    public int Id { get; set; }
    public string Name { get; set; }
}

//PRODUCT CLASS

public class Product

{
    public int Id { get; set; }
    public string Name { get; set; }
    public int CategoryId { get; set; }
    public Category Category { get; set; }
}
//DB CONTEXT CLASS

public class MyDbContext : DbContext
{
    public DbSet<Category> Categories { get; set; }
    public DbSet<Product> Products { get; set; }
}

//PRODUCT CONTROLLER CLASS

public class ProductController : Controller
{
    private readonly MyDbContext _context;

    public ProductController(MyDbContext context) {
        _context = context;
    }

    // GET: /Product/
    public IActionResult Index(int page = 1, int pageSize = 10)
    {
        var products = _context.Products.Include(p => p.Category).Skip((page - 1) * pageSize).Take(pageSize).ToList();
        return View(products);
    }

    // GET: /Product/Create
    [HttpGet]
    public IActionResult Create()
    {
        ViewBag.Categories = _context.Categories.ToList();
        return View();
    }

    // POST: /Product/Create
    [HttpPost]
    public IActionResult Create(Product product)
    {
        if (ModelState.IsValid) 
        {
            _context.Products.Add(product);
            _context.SaveChanges();
            return RedirectToAction("Index");
        }
        ViewBag.Categories = _context.Categories.ToList();
        return View(product);
    }

    // GET: /Product/Edit/{id}
    [HttpGet]
    public IActionResult Edit(int id)
    {
        var product = _context.Products.Include(p => p.Category).FirstOrDefault(p => p.Id == id);
        ViewBag.Categories = _context.Categories.ToList();
        return View(product);
    }

    // POST: /Product/Edit/{id}
    [HttpPost]
    public IActionResult Edit(Product product)
    {
        if (ModelState.IsValid) {
            _context.Products.Update(product);
            _context.SaveChanges();
            return RedirectToAction("Index");
        }
        ViewBag.Categories = _context.Categories.ToList();
        return View(product);
    }

    // POST: /Product/Delete/{id}
    [HttpPost]
    public IActionResult Delete(int id) {
        var product = _context.Products.FirstOrDefault(p => p.Id == id);
        if (product != null) {
            _context.Products.Remove(product);
            _context.SaveChanges();
        }
        return RedirectToAction("Index");
    }
}
